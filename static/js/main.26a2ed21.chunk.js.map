{"version":3,"sources":["components/card/cardComponent.jsx","components/cardList/cardListComponent.jsx","components/searchInput/searchInputComponent.jsx","components/suggestedList/suggestedItemComponent.jsx","components/suggestedList/suggestedListComponent.jsx","App.js","index.js"],"names":["Card","monster","className","isHovered","src","id","alt","name","email","CardList","monsters","map","key","SearchInput","onInputChange","searchValue","onPressKey","type","value","placeholder","onChange","e","onKeyDown","SuggestedItem","suggestedItem","onHovered","onLeaved","onMouseOver","onMouseOut","SuggestedList","suggestedList","pubbleOnHovered","pubbleOnLeaved","item","App","state","handleInputChange","setState","target","handlePubbleOnHovered","hoveredItem","hoveredItems","index","findIndex","handlePubbleOnLeaved","leavedItem","leavedItems","handleOnPressKey","keyCode","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26a2ed21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.scss';\r\n\r\nconst Card = ({ monster }) => {\r\n  return (\r\n    <div className={`card ${monster.isHovered ? 'is-hovered' : ''}`}>\r\n      <img\r\n        src={`https://robohash.org/${monster.id}?set=set3&size=180x180`}\r\n        alt=\"img\"\r\n      />\r\n      <h4 className=\"title\">{monster.name}</h4>\r\n      <p className=\"email\">{monster.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/cardComponent';\r\n\r\nimport './card-list.scss';\r\n\r\nconst CardList = ({ monsters }) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {monsters.map(monster => (\r\n        <Card key={monster.id} className=\"card\" monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nimport './search-input.scss';\r\n\r\nconst SearchInput = ({ onInputChange, searchValue, onPressKey }) => {\r\n  return (\r\n    <input\r\n      className=\"serach-input\"\r\n      type=\"text\"\r\n      value={searchValue}\r\n      placeholder=\"filter monsters ...\"\r\n      onChange={e => onInputChange(e)}\r\n      onKeyDown={e => onPressKey(e)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\n\r\nconst SuggestedItem = ({ suggestedItem, onHovered, onLeaved }) => {\r\n  return (\r\n    <>\r\n      <li\r\n        className=\"suggested-item\"\r\n        onMouseOver={() => onHovered(suggestedItem)}\r\n        onMouseOut={() => onLeaved(suggestedItem)}\r\n      >\r\n        <span>{suggestedItem.name}</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuggestedItem;\r\n","import React from 'react';\r\n\r\nimport SuggestedItem from './suggestedItemComponent';\r\nimport './suggested-list.scss';\r\n\r\nconst SuggestedList = ({ suggestedList, pubbleOnHovered, pubbleOnLeaved }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"suggested-list-ul\">\r\n        {suggestedList.map(item => (\r\n          <SuggestedItem\r\n            key={item.id}\r\n            suggestedItem={item}\r\n            onHovered={pubbleOnHovered}\r\n            onLeaved={pubbleOnLeaved}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuggestedList;\r\n","import React, { Component } from 'react';\nimport CardList from './components/cardList/cardListComponent';\nimport SearchInput from './components/searchInput/searchInputComponent';\nimport SuggestedList from './components/suggestedList/suggestedListComponent';\n\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchValue: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleInputChange = e => {\n    this.setState({ searchValue: e.target.value });\n  };\n\n  handlePubbleOnHovered = hoveredItem => {\n    let hoveredItems = [...this.state.monsters];\n    let index = hoveredItems.findIndex(item => item.id === hoveredItem.id);\n    hoveredItems[index] = { ...hoveredItems[index] };\n    hoveredItems[index].isHovered = true;\n    this.setState({\n      monsters: hoveredItems\n    });\n  };\n\n  handlePubbleOnLeaved = leavedItem => {\n    let leavedItems = [...this.state.monsters];\n    let index = leavedItems.findIndex(item => item.id === leavedItem.id);\n    leavedItems[index] = { ...leavedItems[index] };\n    leavedItems[index].isHovered = false;\n    this.setState({\n      monsters: leavedItems\n    });\n  };\n\n  handleOnPressKey = key => {\n    if (key.keyCode === 27) {\n      let monsters = [...this.state.monsters];\n      monsters = monsters.map(monster => ({ ...monster }));\n      for (let m of monsters) m.isHovered = false;\n      this.setState({\n        monsters,\n        searchValue: ''\n      });\n    }\n  };\n\n  render() {\n    const { monsters, searchValue } = this.state;\n\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchValue.toLowerCase())\n    );\n\n    return (\n      <>\n        <div className=\"monsters-container\">\n          <div className=\"search-suggestedResult\">\n            <SearchInput\n              onInputChange={this.handleInputChange}\n              onPressKey={this.handleOnPressKey}\n              searchValue={this.state.searchValue}\n            />\n            {searchValue && typeof searchValue === 'string' && (\n              <SuggestedList\n                suggestedList={filteredMonsters}\n                searchValue={searchValue}\n                pubbleOnHovered={this.handlePubbleOnHovered}\n                pubbleOnLeaved={this.handlePubbleOnLeaved}\n              />\n            )}\n          </div>\n          <CardList monsters={filteredMonsters} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}